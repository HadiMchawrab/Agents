{'tables': [{'banking': ['age', 'job', 'marital', 'education', 'default', 'housing', 'loan', 'duration']}, {'data': ['Bankrupt?', ' ROA(C) before interest and depreciation before interest', ' Debt ratio %', ' Net worth/Assets', 
' Total debt/Total net worth', ' Cash Flow to Liability', ' Net Income to Total Assets']}], 'adjusted_columns': {'banking': ['age:int64', 'job:object', 'marital:object', 'education:object', 'default:object', 'housing:object', 'loan:object', 'duration:int64'], 'data': ['Bankrupt?:int64', ' ROA(C) before interest and depreciation before interest:float64', ' Debt ratio %:float64', ' Net worth/Assets:float64', ' Total debt/Total net worth:float64', ' Cash 
Flow to Liability:float64', ' Net Income to Total Assets:float64']}, 'data_frames': {'banking':        age        
  job  marital            education  default housing loan  duration
0       44  blue-collar  married             basic.4y  unknown     yes   no       210
1       53   technician  married              unknown       no      no   no       138
2       28   management   single    university.degree       no     yes   no       339
3       39     services  married          high.school       no      no   no       185
4       55      retired  married             basic.4y       no     yes   no       137
...    ...          ...      ...                  ...      ...     ...  ...       ...
41183   59      retired  married          high.school  unknown      no  yes       222
41184   31    housemaid  married             basic.4y  unknown      no   no       196
41185   42       admin.   single    university.degree  unknown     yes  yes        62
41186   48   technician  married  professional.course       no      no  yes       200
41187   25      student   single          high.school       no      no   no       112

[41188 rows x 8 columns], 'data':       Bankrupt?  ...   Net Income to Total Assets
0             1  ...                     0.716845
1             1  ...                     0.795297
2             1  ...                     0.774670
3             1  ...                     0.739555
4             1  ...                     0.795016
...         ...  ...                          ...
6814          0  ...                     0.799927
6815          0  ...                     0.799748
6816          0  ...                     0.797778
6817          0  ...                     0.811808
6818          0  ...                     0.815956

[6819 rows x 7 columns]}, 'csv_files': {'csv_test/banking.csv', 'csv_test/data.csv'}, 'topic': 'Machine learning models employed in Credit Risk Assessment', 'Relationship': 'The ML models (SVM, RNN, Bayesian Networks) are well-suited for credit risk assessment using the available data. SVM can classify customers into risk categories based on financial attributes, RNNs can analyze sequential patterns in financial data to predict defaults, and Bayesian Networks can model probabilistic relationships between financial indicators and credit risk outcomes.', 'ML_Models': ['Support Vector Machines (SVM)', 'Recurrent Neural Networks (RNN)', 'Bayesian Networks', 'Logistic Regression', 'Random Forest', 'Gradient Boosting', 'Neural Networks'], 'DF_Info': {}, 'Analysis': {}, 'Pictures': {}, 'Pictures_Analysis': {}, 'Reqs': {'banking': 'pandas numpy matplotlib seaborn scikit-learn', 'data': 'pandas numpy matplotlib seaborn scikit-learn'}, 'scripts': {'banking': "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\n\n# Assuming df is your dataframe with all columns\n# Separate banking and financial data\nbanking_cols 
= ['age', 'job', 'marital', 'education', 'default', 'housing', 'loan', 'duration']\nfinancial_cols = ['Bankrupt?', ' ROA(C) before interest and depreciation before interest', ' Debt ratio %', ' Net worth/Assets', ' Total debt/Total net worth', ' Cash Flow to Liability', ' Net Income to Total Assets']\n\n# Create figure for correlation heatmap of financial features\nplt.figure(figsize=(12, 10))\nsns.heatmap(df[financial_cols].corr(), annot=True, cmap='coolwarm', linewidths=0.5)\nplt.title('Correlation Heatmap of Financial Features')\nplt.tight_layout()\nplt.savefig('correlation_heatmap.png')\n\n# Distribution of bankruptcy cases\nplt.figure(figsize=(8, 6))\nsns.countplot(x='Bankrupt?', data=df)\nplt.title('Distribution of Bankruptcy Cases')\nplt.savefig('bankruptcy_distribution.png')\n\n# Pairplot of key financial indicators\nplt.figure(figsize=(15, 12))\nsns.pairplot(df[financial_cols[:4] + ['Bankrupt?']], hue='Bankrupt?')\nplt.savefig('financial_pairplot.png')\n\n# Age distribution by bankruptcy status\nplt.figure(figsize=(10, 6))\nsns.histplot(data=df, x='age', hue='Bankrupt?', multiple='stack', bins=20)\nplt.title('Age 
Distribution by Bankruptcy Status')\nplt.savefig('age_bankruptcy.png')\n\n# Feature importance visualization (using correlation with target)\ncorr_with_target = df[financial_cols].corr()['Bankrupt?'].sort_values(ascending=False)\nplt.figure(figsize=(10, 8))\nsns.barplot(x=corr_with_target.values[1:], y=corr_with_target.index[1:])\nplt.title('Feature Correlation with Bankruptcy')\nplt.tight_layout()\nplt.savefig('feature_importance.png')", 'data': "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\n\n# Assuming df is your dataframe with all columns\n# Separate banking and financial data\nbanking_cols = ['age', 'job', 'marital', 'education', 'default', 'housing', 'loan', 'duration']\nfinancial_cols = ['Bankrupt?', ' ROA(C) before interest and depreciation before interest', ' Debt ratio %', ' Net worth/Assets', ' Total debt/Total net worth', ' Cash Flow to Liability', ' Net Income 
to Total Assets']\n\n# Create figure for correlation heatmap of financial features\nplt.figure(figsize=(12, 10))\nsns.heatmap(df[financial_cols].corr(), annot=True, cmap='coolwarm', linewidths=0.5)\nplt.title('Correlation Heatmap of Financial Features')\nplt.tight_layout()\nplt.savefig('correlation_heatmap.png')\n\n# Distribution of bankruptcy cases\nplt.figure(figsize=(8, 6))\nsns.countplot(x='Bankrupt?', data=df)\nplt.title('Distribution of Bankruptcy Cases')\nplt.savefig('bankruptcy_distribution.png')\n\n# Pairplot of key financial indicators\nplt.figure(figsize=(15, 12))\nsns.pairplot(df[financial_cols], hue='Bankrupt?', diag_kind='kde')\nplt.savefig('financial_pairplot.png')\n\n# Age distribution by bankruptcy status\nplt.figure(figsize=(10, 6))\nsns.boxplot(x='Bankrupt?', y='age', 
data=df)\nplt.title('Age Distribution by Bankruptcy Status')\nplt.savefig('age_bankruptcy.png')\n\n# PCA visualization of financial features\nscaler = StandardScaler()\nfinancial_scaled = scaler.fit_transform(df[financial_cols[1:]])  # Exclude target variable\npca = PCA(n_components=2)\npca_result = pca.fit_transform(financial_scaled)\n\nplt.figure(figsize=(10, 8))\nsns.scatterplot(x=pca_result[:, 0], y=pca_result[:, 1], hue=df['Bankrupt?'])\nplt.title('PCA of Financial Features')\nplt.xlabel('Principal Component 1')\nplt.ylabel('Principal Component 2')\nplt.savefig('pca_visualization.png')"}, 'return_format': {}}